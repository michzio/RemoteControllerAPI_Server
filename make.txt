# Makefile for UNIX        

# the compiler: gcc for C program, define as g++ for C++ 
CC = gcc  

# the static library archiver 
AR = ar rcs

# compiler flags: 
# -g enable debugging 
# -Wall turn on all warnings 
# -D__USE_FIXED_PROTOTYPES__  force the compiler to use the correct headers 
# -ansi donâ€™t use GNU extensions, stick to ANSI (c89)
# -std=c99 use newer version
CFLAGS=-g -Wall -D__USE_FIXED_PROTOTYPES__ -std=c99

# include headers 
CFLAGS += -I/usr/local/include

# libraries 
# OpenCV
OPENCV_LIBS = `pkg-config --cflags --libs opencv` 

# OS X 
OS_X_LIBS += -framework ApplicationServices 
OS_X_LIBS += -framework Carbon
OS_X_LIBS += -framework IOKit
OS_X_LIBS += -framework AudioToolbox
OS_X_LIBS += -framework IOSurface

# custom
NETWORKING_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/networking/libnetworking.a 
CONCURRENCY_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/concurrency/libconcurrency.a 
COMMON_FUNCTIONS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/common/libcommon_functions.a
COLLECTIONS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/collections/libcollections.a
COMPARERS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/comparers/libcomparers.a
UNIT_TESTS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/unit_tests/libunit_tests.a
# custom OS X 
AUTOMATION_SCRIPTS_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/system/OS_X/automation_scripts/libautomation_scripts.a
COCOA_HELPER_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/system/OS_X/cocoa_helper/libcocoa_helper.a
LIBPNG_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/libpng-1.6.24/liblibpng.a 
ZLIB_LIBRARY = /Users/michzio/Developer/MyProjects/BachelorDegree/c/zlib-1.2.8/libzlib.a

# the build target executable: 
TARGET = server
LIBRARY = librc_server.a

# source files 
SOURCE_FILES = runner.o thread.o threads_manager.o datagram.o datagram_server.o generic_server.o passive_connection.o passive_socket.o server_loop.o service.o stream_server.o server.o

# test source files 
TEST_SOURCE_FILES = test_server_loop.o test_transfer.o

all: $(TARGET)

$(TARGET): main.c $(LIBRARY) $(TEST_SOURCE_FILES)
	$(CC) $(CFLAGS) -o $(TARGET) main.c $(LIBRARY) $(NETWORKING_LIBRARY) $(CONCURRENCY_LIBRARY) $(COMMON_FUNCTIONS_LIBRARY) $(COLLECTIONS_LIBRARY) $(COMPARERS_LIBRARY) $(AUTOMATION_SCRIPTS_LIBRARY) $(OS_X_LIBS) $(COCOA_HELPER_LIBRARY) $(LIBPNG_LIBRARY) $(ZLIB_LIBRARY) $(TEST_SOURCE_FILES) $(UNIT_TESTS_LIBRARY) -lpthread $(OPENCV_LIBS)

$(LIBRARY): $(SOURCE_FILES)
	$(AR) $(LIBRARY) $(SOURCE_FILES)

runner.o: concurrency/runner.c concurrency/runner.h
	$(CC) $(CFLAGS) -c concurrency/runner.c  

thread.o: concurrency/thread.c concurrency/thread.h 
	$(CC) $(CFLAGS) -c concurrency/thread.c

threads_manager.o: concurrency/threads_manager.c concurrency/threads_manager.h
	$(CC) $(CFLAGS) -c concurrency/threads_manager.c 

datagram.o: networking/datagram.c networking/datagram.h
	$(CC) $(CFLAGS) -c networking/datagram.c

datagram_server.o: networking/datagram_server.c networking/datagram_server.h
	$(CC) $(CFLAGS) -c networking/datagram_server.c

generic_server.o: networking/generic_server.c networking/generic_server.h
	$(CC) $(CFLAGS) -c networking/generic_server.c

passive_connection.o: networking/passive_connection.c networking/passive_connection.h
	$(CC) $(CFLAGS) -c networking/passive_connection.c

passive_socket.o: networking/passive_socket.c networking/passive_socket.h
	$(CC) $(CFLAGS) -c networking/passive_socket.c

server_loop.o: networking/server_loop.c networking/server_loop.h
	$(CC) $(CFLAGS) -c networking/server_loop.c

service.o: networking/service.c networking/service.h
	$(CC) $(CFLAGS) -c networking/service.c

stream_server.o: networking/stream_server.c networking/stream_server.h
	$(CC) $(CFLAGS) -c networking/stream_server.c

server.o: server.c server.h
	$(CC) $(CFLAGS) -c server.c

test_server_loop.o: test/test_server_loop.c test/test_server_loop.h 
	$(CC) $(CFLAGS) -c test/test_server_loop.c 

test_transfer.o: test/test_transfer.c test/test_transfer.h
	$(CC) $(CFLAGS) -c test/test_transfer.c

clean:
	$(RM) $(TARGET) $(LIBRARY) $(SOURCE_FILES) $(TEST_SOURCE_FILES)